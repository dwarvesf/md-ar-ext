name: Release Extension

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest
    # Define a job environment variable to check for the presence of the secret
    env:
      HAS_VSCE_PAT: ${{ secrets.VSCE_PAT != '' }}
      CI: 'true'
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # We need git history for changelog
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env file
        run: |
          echo "# Environment created by GitHub Actions" > .env
          echo "VSCE_PAT=${{ secrets.VSCE_PAT }}" >> .env
          echo "# Other optional values" >> .env
          echo "TEST_MODE=false" >> .env
      
      - name: Configure Git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
      
      - name: Run release script
        run: |
          node ./scripts/release.js ${{ github.event.inputs.version_bump }}
      
      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "package_name=Markdown-Arweave-Uploader-$VERSION.vsix" >> $GITHUB_OUTPUT
      
      - name: Push changes
        run: |
          git push
          git push --tags
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: Release v${{ steps.extract_version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            ${{ steps.extract_version.outputs.package_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Publish to VS Code Marketplace if VSCE_PAT is available
      - name: Publish to VS Code Marketplace
        if: env.HAS_VSCE_PAT == 'true'
        run: npx vsce publish --packagePath ${{ steps.extract_version.outputs.package_name }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }} 